#include <AccelStepper.h>

// Define the pins connected to your motor
#define MOTOR_PIN1 2   // Motor pin 1
#define MOTOR_PIN2 3   // Motor pin 2
#define MOTOR_PIN3 4   // Motor pin 3
#define MOTOR_PIN4 5   // Motor pin 4

// Define the motor
AccelStepper stepper(AccelStepper::FULL4WIRE, MOTOR_PIN1, MOTOR_PIN2, MOTOR_PIN3, MOTOR_PIN4);

// Parameters for acceleration
const long finalSpeed = 1000;  // Maximum speed in steps per second
const long initialSpeed = 0;   // Initial speed in steps per second
const long accel = 100;        // Acceleration steps per second
const long maxAccel = 500;     // Max acceleration value to ensure gradual speed increase
long currentSpeed = initialSpeed;
unsigned long lastTime = 0;
unsigned long lastStepTime = 0;
const long stepInterval = 1000; // A starting value of interval, adjusted during the loop.

void setup() {
  // Set motor speed and acceleration
  stepper.setMaxSpeed(finalSpeed);
  stepper.setAcceleration(accel);

  // Move the motor to start position if needed (optional)
  stepper.setCurrentPosition(0);
}

void loop() {
  // Gradually increase speed (constant acceleration)
  unsigned long currentTime = millis();

  // Calculate the current speed based on acceleration
  if (currentSpeed < finalSpeed) {
    currentSpeed += accel;  // Increase speed incrementally (acceleration)
    if (currentSpeed > finalSpeed) {
      currentSpeed = finalSpeed; // Ensure the speed doesn't exceed max speed
    }

    // Update stepper max speed and acceleration
    stepper.setMaxSpeed(currentSpeed);
    stepper.setAcceleration(accel);
  }

  // Step the motor (if the desired delay interval is met)
  unsigned long stepInterval = 1000000L / currentSpeed;  // Convert speed to time interval between steps

  if (currentTime - lastStepTime >= stepInterval) {
    stepper.move(1);  // Move one step
    lastStepTime = currentTime;
  }

  stepper.run();  // Move the motor
}
